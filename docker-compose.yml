# Docker Compose configuration for Phase 1

services:
  web-client:
    build: ./src/web-client
    ports:
      - "3000:3000"
    environment:
      - REDIS_URL=redis://redis:6379
      - ML_SERVICE_URL=http://ml-service:8000
      - NODE_ENV=development
    read_only: true
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    volumes:
      - uploads:/app/uploads
      - results:/app/results
      - ./src/web-client:/app:rw
      - /app/node_modules
    depends_on:
      - redis
      - ml-service
    restart: unless-stopped
    user: "${UID:-1001}:${GID:-1001}"

  ml-service:
    build: ./src/ml-service
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - PYTHONPATH=/app
      - SIMULATED_ATTESTATION=true
      - POLICY_BUNDLE_PATH=
      - AUDIT_HMAC_KEY=dev-local-hmac-key
    read_only: true
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./src/ml-service/models:/app/models:ro
      - uploads:/app/uploads
      - results:/app/results
      - ./src/ml-service:/app:rw
    depends_on:
      - redis
    restart: unless-stopped
    user: "${UID:-1001}:${GID:-1001}"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

volumes:
  redis-data:
  uploads:
  results:
